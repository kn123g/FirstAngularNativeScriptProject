{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["/// <reference path=\"../references.d.ts\" />\nimport { ElementRef, TemplateRef, EmbeddedViewRef, ViewContainerRef, EventEmitter } from \"@angular/core\";\nimport { RadSideDrawer } from \"nativescript-ui-sidedrawer\";\nexport interface ItemEventArgs {\n    object: any;\n    view: EmbeddedViewRef<any>;\n    returnValue?: boolean;\n}\n/**\n* This is the SideDrawer component. It separates your mobile app's screen\n* into a main part and a menu part whereby the menu part is shown upon a swipe\n* gesture using a transition effect.\n*/\nexport declare class RadSideDrawerComponent {\n    elementRef: ElementRef;\n    private viewContainer;\n    sideDrawer: RadSideDrawer;\n    mainTemplate: TemplateRef<ElementRef>;\n    drawerTemplate: TemplateRef<ElementRef>;\n    private _drawerContentSize;\n    private _gesturesEnabled;\n    private _drawerTransition;\n    private _drawerLocation;\n    drawerOpening: EventEmitter<any>;\n    drawerOpen: EventEmitter<any>;\n    drawerClosing: EventEmitter<any>;\n    drawerClosed: EventEmitter<any>;\n    /**\n      * [Deprecated: Please use the 'drawerTransition' property instead].\n      */\n    set transition(transition: any);\n    constructor(elementRef: ElementRef, viewContainer: ViewContainerRef);\n    get nativeElement(): RadSideDrawer;\n    /**\n      * Defines either the width or the height\n      * of the menu pane depending on the location of the SideDrawer.\n      * Top or Bottom - height, Right or Left - width.\n      */\n    set drawerContentSize(value: number);\n    set gesturesEnabled(value: boolean);\n    set drawerTransition(value: string);\n    set drawerLocation(value: string);\n    private updateDrawerLocation;\n    private updateDrawerTransition;\n    private updateGesturesEnabled;\n    private updateContentSize;\n}\n/**\n * Directive identifying the drawer content.\n */\nexport declare class TKDrawerContentDirective {\n    private _elementRef;\n    constructor(_elementRef: ElementRef);\n}\n/**\n * Directive identifying the main content.\n */\nexport declare class TKMainContentDirective {\n    private _elementRef;\n    constructor(_elementRef: ElementRef);\n}\n/**\n * Directives identifying the RadSideDrawer.\n */\nexport declare const SIDEDRAWER_DIRECTIVES: (typeof RadSideDrawerComponent | typeof TKDrawerContentDirective | typeof TKMainContentDirective)[];\n/**\n * NgModule containing all of the RadSideDrawer directives.\n */\nexport declare class NativeScriptUISideDrawerModule {\n}\n"]}